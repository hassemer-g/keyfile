/* esm.sh - @noble/hashes@2.0.1/utils */
function l(t){return t instanceof Uint8Array||ArrayBuffer.isView(t)&&t.constructor.name==="Uint8Array"}function a(t,e=""){if(!Number.isSafeInteger(t)||t<0){let n=e&&`"${e}" `;throw new Error(`${n}expected integer >= 0, got ${t}`)}}function s(t,e,n=""){let o=l(t),r=t?.length,i=e!==void 0;if(!o||i&&r!==e){let c=n&&`"${n}" `,u=i?` of length ${e}`:"",p=o?`length=${r}`:`type=${typeof t}`;throw new Error(c+"expected Uint8Array"+u+", got "+p)}return t}function m(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash must wrapped by utils.createHasher");a(t.outputLen),a(t.blockLen)}function E(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function U(t,e){s(t,void 0,"digestInto() output");let n=e.outputLen;if(t.length<n)throw new Error('"digestInto() output" expected to be of length >='+n)}function L(t){return new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}function B(t){return new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4))}function H(...t){for(let e=0;e<t.length;e++)t[e].fill(0)}function T(t){return new DataView(t.buffer,t.byteOffset,t.byteLength)}function O(t,e){return t<<32-e|t>>>e}function j(t,e){return t<<e|t>>>32-e>>>0}var d=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;function y(t){return t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255}var $=d?t=>t:t=>y(t);function w(t){for(let e=0;e<t.length;e++)t[e]=y(t[e]);return t}var k=d?t=>t:w,g=typeof Uint8Array.from([]).toHex=="function"&&typeof Uint8Array.fromHex=="function",h=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function I(t){if(s(t),g)return t.toHex();let e="";for(let n=0;n<t.length;n++)e+=h[t[n]];return e}var f={_0:48,_9:57,A:65,F:70,a:97,f:102};function x(t){if(t>=f._0&&t<=f._9)return t-f._0;if(t>=f.A&&t<=f.F)return t-(f.A-10);if(t>=f.a&&t<=f.f)return t-(f.a-10)}function S(t){if(typeof t!="string")throw new Error("hex string expected, got "+typeof t);if(g)return Uint8Array.fromHex(t);let e=t.length,n=e/2;if(e%2)throw new Error("hex string expected, got unpadded hex of length "+e);let o=new Uint8Array(n);for(let r=0,i=0;r<n;r++,i+=2){let c=x(t.charCodeAt(i)),u=x(t.charCodeAt(i+1));if(c===void 0||u===void 0){let p=t[i]+t[i+1];throw new Error('hex string expected, got non-hex character "'+p+'" at index '+i)}o[r]=c*16+u}return o}var b=async()=>{};async function V(t,e,n){let o=Date.now();for(let r=0;r<t;r++){n(r);let i=Date.now()-o;i>=0&&i<e||(await b(),o+=i)}}function A(t){if(typeof t!="string")throw new Error("string expected");return new Uint8Array(new TextEncoder().encode(t))}function _(t,e=""){return typeof t=="string"?A(t):s(t,void 0,e)}function D(...t){let e=0;for(let o=0;o<t.length;o++){let r=t[o];s(r),e+=r.length}let n=new Uint8Array(e);for(let o=0,r=0;o<t.length;o++){let i=t[o];n.set(i,r),r+=i.length}return n}function R(t,e){if(e!==void 0&&{}.toString.call(e)!=="[object Object]")throw new Error("options must be object or undefined");return Object.assign(t,e)}function F(t,e={}){let n=(r,i)=>t(i).update(r).digest(),o=t(void 0);return n.outputLen=o.outputLen,n.blockLen=o.blockLen,n.create=r=>t(r),Object.assign(n,e),Object.freeze(n)}function N(t=32){let e=typeof globalThis=="object"?globalThis.crypto:null;if(typeof e?.getRandomValues!="function")throw new Error("crypto.getRandomValues must be defined");return e.getRandomValues(new Uint8Array(t))}var z=t=>({oid:Uint8Array.from([6,9,96,134,72,1,101,3,4,2,t])});export{s as abytes,E as aexists,m as ahash,a as anumber,U as aoutput,V as asyncLoop,y as byteSwap,w as byteSwap32,I as bytesToHex,R as checkOpts,H as clean,D as concatBytes,F as createHasher,T as createView,S as hexToBytes,l as isBytes,d as isLE,_ as kdfInputToBytes,b as nextTick,z as oidNist,N as randomBytes,j as rotl,O as rotr,k as swap32IfBE,$ as swap8IfBE,B as u32,L as u8,A as utf8ToBytes};
/*! Bundled license information:

@noble/hashes/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
//# sourceMappingURL=utils.mjs.map

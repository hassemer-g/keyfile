/* esm.sh - @noble/hashes@2.0.1/hmac */
import{abytes as a,aexists as r,ahash as u,clean as l}from"./utils.mjs";var o=class{oHash;iHash;blockLen;outputLen;finished=!1;destroyed=!1;constructor(t,i){if(u(t),a(i,void 0,"key"),this.iHash=t.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let h=this.blockLen,e=new Uint8Array(h);e.set(i.length>h?t.create().update(i).digest():i);for(let s=0;s<e.length;s++)e[s]^=54;this.iHash.update(e),this.oHash=t.create();for(let s=0;s<e.length;s++)e[s]^=106;this.oHash.update(e),l(e)}update(t){return r(this),this.iHash.update(t),this}digestInto(t){r(this),a(t,this.outputLen,"output"),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){let t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||=Object.create(Object.getPrototypeOf(this),{});let{oHash:i,iHash:h,finished:e,destroyed:s,blockLen:d,outputLen:c}=this;return t=t,t.finished=e,t.destroyed=s,t.blockLen=d,t.outputLen=c,t.oHash=i._cloneInto(t.oHash),t.iHash=h._cloneInto(t.iHash),t}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}},p=(n,t,i)=>new o(n,t).update(i).digest();p.create=(n,t)=>new o(n,t);export{o as _HMAC,p as hmac};
//# sourceMappingURL=hmac.mjs.map
